// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskEdit should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskEdit
    currentTask={
        Object {
            "docs": Array [],
            "id": null,
            "labs": Array [],
            "name": "",
            "videoLink": "",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action="submit"
        className="TaskEdit_form"
        onSubmit={[Function]}
>
        <h1
                className="TaskEdit_title"
        >
                EDIT A TASK
        </h1>
        <label
                for="name"
        >
                Task name:
        </label>
        <input
                className="TaskEdit_input TaskEdit_input-name"
                name="name"
                onChange={[Function]}
                placeholder="name"
                type="text"
                value=""
        />
        <label
                for="description"
        >
                Description of task:
        </label>
        <textarea
                className="TaskEdit_input TaskEdit_input-description"
                name="description"
                onChange={[Function]}
                placeholder="description"
                type="text"
                value=""
        />
        <label
                for="videoLink"
        >
                Link to the lesson video:
        </label>
        <input
                className="TaskEdit_input TaskEdit_input-videoLink"
                name="videoLink"
                onChange={[Function]}
                placeholder="url"
                type="text"
                value=""
        />
        <div
                className="TaskEdit_select-list"
        >
                <p>
                        Select documents for your students to read with this task
                </p>
                <button
                        className="TaskEdit_new-select"
                        onClick={[Function]}
                >
                        new doc +
                </button>
        </div>
        <div
                className="TaskEdit_select-list"
        >
                <p>
                        Select labs for your students to do with this task
                </p>
                <button
                        className="TaskEdit_new-select"
                        onClick={[Function]}
                >
                        new lab +
                </button>
        </div>
        <input
                className="TaskEdit_submit"
                type="submit"
        />
</form>,
      "className": "TaskEdit_page",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "submit",
        "children": Array [
          <h1
            className="TaskEdit_title"
>
            EDIT A TASK
</h1>,
          <label
            for="name"
>
            Task name:
</label>,
          <input
            className="TaskEdit_input TaskEdit_input-name"
            name="name"
            onChange={[Function]}
            placeholder="name"
            type="text"
            value=""
/>,
          <label
            for="description"
>
            Description of task:
</label>,
          <textarea
            className="TaskEdit_input TaskEdit_input-description"
            name="description"
            onChange={[Function]}
            placeholder="description"
            type="text"
            value=""
/>,
          <label
            for="videoLink"
>
            Link to the lesson video:
</label>,
          <input
            className="TaskEdit_input TaskEdit_input-videoLink"
            name="videoLink"
            onChange={[Function]}
            placeholder="url"
            type="text"
            value=""
/>,
          <div
            className="TaskEdit_select-list"
>
            <p>
                        Select documents for your students to read with this task
            </p>
            <button
                        className="TaskEdit_new-select"
                        onClick={[Function]}
            >
                        new doc +
            </button>
</div>,
          <div
            className="TaskEdit_select-list"
>
            <p>
                        Select labs for your students to do with this task
            </p>
            <button
                        className="TaskEdit_new-select"
                        onClick={[Function]}
            >
                        new lab +
            </button>
</div>,
          <input
            className="TaskEdit_submit"
            type="submit"
/>,
        ],
        "className": "TaskEdit_form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "EDIT A TASK",
            "className": "TaskEdit_title",
          },
          "ref": null,
          "rendered": "EDIT A TASK",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Task name:",
            "for": "name",
          },
          "ref": null,
          "rendered": "Task name:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "TaskEdit_input TaskEdit_input-name",
            "name": "name",
            "onChange": [Function],
            "placeholder": "name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description of task:",
            "for": "description",
          },
          "ref": null,
          "rendered": "Description of task:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "TaskEdit_input TaskEdit_input-description",
            "name": "description",
            "onChange": [Function],
            "placeholder": "description",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Link to the lesson video:",
            "for": "videoLink",
          },
          "ref": null,
          "rendered": "Link to the lesson video:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "TaskEdit_input TaskEdit_input-videoLink",
            "name": "videoLink",
            "onChange": [Function],
            "placeholder": "url",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Select documents for your students to read with this task
</p>,
              Array [],
              <button
                className="TaskEdit_new-select"
                onClick={[Function]}
>
                new doc +
</button>,
            ],
            "className": "TaskEdit_select-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Select documents for your students to read with this task",
              },
              "ref": null,
              "rendered": "Select documents for your students to read with this task",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "new doc +",
                "className": "TaskEdit_new-select",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "new doc +",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Select labs for your students to do with this task
</p>,
              Array [],
              <button
                className="TaskEdit_new-select"
                onClick={[Function]}
>
                new lab +
</button>,
            ],
            "className": "TaskEdit_select-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Select labs for your students to do with this task",
              },
              "ref": null,
              "rendered": "Select labs for your students to do with this task",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "new lab +",
                "className": "TaskEdit_new-select",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "new lab +",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "TaskEdit_submit",
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action="submit"
          className="TaskEdit_form"
          onSubmit={[Function]}
>
          <h1
                    className="TaskEdit_title"
          >
                    EDIT A TASK
          </h1>
          <label
                    for="name"
          >
                    Task name:
          </label>
          <input
                    className="TaskEdit_input TaskEdit_input-name"
                    name="name"
                    onChange={[Function]}
                    placeholder="name"
                    type="text"
                    value=""
          />
          <label
                    for="description"
          >
                    Description of task:
          </label>
          <textarea
                    className="TaskEdit_input TaskEdit_input-description"
                    name="description"
                    onChange={[Function]}
                    placeholder="description"
                    type="text"
                    value=""
          />
          <label
                    for="videoLink"
          >
                    Link to the lesson video:
          </label>
          <input
                    className="TaskEdit_input TaskEdit_input-videoLink"
                    name="videoLink"
                    onChange={[Function]}
                    placeholder="url"
                    type="text"
                    value=""
          />
          <div
                    className="TaskEdit_select-list"
          >
                    <p>
                              Select documents for your students to read with this task
                    </p>
                    <button
                              className="TaskEdit_new-select"
                              onClick={[Function]}
                    >
                              new doc +
                    </button>
          </div>
          <div
                    className="TaskEdit_select-list"
          >
                    <p>
                              Select labs for your students to do with this task
                    </p>
                    <button
                              className="TaskEdit_new-select"
                              onClick={[Function]}
                    >
                              new lab +
                    </button>
          </div>
          <input
                    className="TaskEdit_submit"
                    type="submit"
          />
</form>,
        "className": "TaskEdit_page",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "submit",
          "children": Array [
            <h1
              className="TaskEdit_title"
>
              EDIT A TASK
</h1>,
            <label
              for="name"
>
              Task name:
</label>,
            <input
              className="TaskEdit_input TaskEdit_input-name"
              name="name"
              onChange={[Function]}
              placeholder="name"
              type="text"
              value=""
/>,
            <label
              for="description"
>
              Description of task:
</label>,
            <textarea
              className="TaskEdit_input TaskEdit_input-description"
              name="description"
              onChange={[Function]}
              placeholder="description"
              type="text"
              value=""
/>,
            <label
              for="videoLink"
>
              Link to the lesson video:
</label>,
            <input
              className="TaskEdit_input TaskEdit_input-videoLink"
              name="videoLink"
              onChange={[Function]}
              placeholder="url"
              type="text"
              value=""
/>,
            <div
              className="TaskEdit_select-list"
>
              <p>
                            Select documents for your students to read with this task
              </p>
              <button
                            className="TaskEdit_new-select"
                            onClick={[Function]}
              >
                            new doc +
              </button>
</div>,
            <div
              className="TaskEdit_select-list"
>
              <p>
                            Select labs for your students to do with this task
              </p>
              <button
                            className="TaskEdit_new-select"
                            onClick={[Function]}
              >
                            new lab +
              </button>
</div>,
            <input
              className="TaskEdit_submit"
              type="submit"
/>,
          ],
          "className": "TaskEdit_form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "EDIT A TASK",
              "className": "TaskEdit_title",
            },
            "ref": null,
            "rendered": "EDIT A TASK",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Task name:",
              "for": "name",
            },
            "ref": null,
            "rendered": "Task name:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "TaskEdit_input TaskEdit_input-name",
              "name": "name",
              "onChange": [Function],
              "placeholder": "name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description of task:",
              "for": "description",
            },
            "ref": null,
            "rendered": "Description of task:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "TaskEdit_input TaskEdit_input-description",
              "name": "description",
              "onChange": [Function],
              "placeholder": "description",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Link to the lesson video:",
              "for": "videoLink",
            },
            "ref": null,
            "rendered": "Link to the lesson video:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "TaskEdit_input TaskEdit_input-videoLink",
              "name": "videoLink",
              "onChange": [Function],
              "placeholder": "url",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Select documents for your students to read with this task
</p>,
                Array [],
                <button
                  className="TaskEdit_new-select"
                  onClick={[Function]}
>
                  new doc +
</button>,
              ],
              "className": "TaskEdit_select-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Select documents for your students to read with this task",
                },
                "ref": null,
                "rendered": "Select documents for your students to read with this task",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "new doc +",
                  "className": "TaskEdit_new-select",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "new doc +",
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Select labs for your students to do with this task
</p>,
                Array [],
                <button
                  className="TaskEdit_new-select"
                  onClick={[Function]}
>
                  new lab +
</button>,
              ],
              "className": "TaskEdit_select-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Select labs for your students to do with this task",
                },
                "ref": null,
                "rendered": "Select labs for your students to do with this task",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "new lab +",
                  "className": "TaskEdit_new-select",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "new lab +",
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "TaskEdit_submit",
              "type": "submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
